{
  "stats": {
    "suites": 1,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2025-10-27T19:27:45.351Z",
    "end": "2025-10-27T19:28:26.420Z",
    "duration": 41069,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f974ec18-68df-40de-a1d7-11f48fa4b0be",
      "title": "",
      "fullFile": "D:\\Bootcamp QA\\uiAutomation_nyoba doang\\Test Case\\tc01_login.js",
      "file": "\\Test Case\\tc01_login.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f30e849b-9e24-4efb-864b-d094ba54ec56",
          "title": "Test SAUCEDEMO",
          "fullFile": "D:\\Bootcamp QA\\uiAutomation_nyoba doang\\Test Case\\tc01_login.js",
          "file": "\\Test Case\\tc01_login.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Test SAUCEDEMO\"",
              "fullTitle": "Test SAUCEDEMO \"before each\" hook in \"Test SAUCEDEMO\"",
              "timedOut": false,
              "duration": 1053,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('ini before test');\ndriver = await new Builder()\n    .forBrowser('chrome')\n    .setChromeOptions(options)\n    .build();\nawait driver.manage().window().maximize();\nawait driver.get('https://www.saucedemo.com/v1/');",
              "err": {},
              "uuid": "4688ff67-f18e-4de1-a516-f364397fe1bb",
              "parentUUID": "f30e849b-9e24-4efb-864b-d094ba54ec56",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Test SAUCEDEMO\"",
              "fullTitle": "Test SAUCEDEMO \"after each\" hook in \"Test SAUCEDEMO\"",
              "timedOut": false,
              "duration": 2106,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('ini after test');\nawait driver.sleep(2000);\nawait driver.quit();",
              "err": {},
              "uuid": "079d1b35-ffa3-4abb-ad01-93f8782804e2",
              "parentUUID": "f30e849b-9e24-4efb-864b-d094ba54ec56",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Valid Login",
              "fullTitle": "Test SAUCEDEMO Valid Login",
              "timedOut": false,
              "duration": 1124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nawait loginPage.login(\"standard_user\", \"secret_sauce\");\nlet produk = await driver.wait(until.elementLocated(By.className(\"product_label\")), 50000);\nlet isDisplayed = await produk.isDisplayed();\nassert.strictEqual(isDisplayed, true);\nlet full_ss = await driver.takeScreenshot();\nfs.writeFileSync('report_ss/login/valid login.png', Buffer.from(full_ss, 'base64'));",
              "err": {},
              "uuid": "1f9323f1-b76c-4f72-8f0d-9b7c919461cb",
              "parentUUID": "f30e849b-9e24-4efb-864b-d094ba54ec56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "login with Invalid Username",
              "fullTitle": "Test SAUCEDEMO login with Invalid Username",
              "timedOut": false,
              "duration": 432,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nawait loginPage.login(\"invalid_user\", \"secret_saucee\");\nawait driver.wait(until.elementLocated(By.css('h3[data-test=\"error\"]')), 50000);\nlet erorWarning = await driver.findElement(By.css('h3[data-test=\"error\"]'));\nlet eror = await erorWarning.getText();\nassert.strictEqual(eror, \"Epic sadface: Username and password do not match any user in this service\");\nlet full_ss = await driver.takeScreenshot();\nfs.writeFileSync('report_ss/login/invalid username.png', Buffer.from(full_ss, 'base64'));",
              "err": {},
              "uuid": "f82ee96e-b0be-435c-a671-076456a2af44",
              "parentUUID": "f30e849b-9e24-4efb-864b-d094ba54ec56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "login with Invalid Password",
              "fullTitle": "Test SAUCEDEMO login with Invalid Password",
              "timedOut": false,
              "duration": 462,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nawait loginPage.login(\"standard_user\", \"invalid_pass\");\nawait driver.wait(until.elementLocated(By.css('h3[data-test=\"error\"]')), 50000);\nlet erorWarning = await driver.findElement(By.css('h3[data-test=\"error\"]'));\nlet eror = await erorWarning.getText();\nassert.strictEqual(eror, \"Epic sadface: Username and password do not match any user in this service\");\nlet full_ss = await driver.takeScreenshot();\nfs.writeFileSync('report_ss/login/invalid password.png', Buffer.from(full_ss, 'base64'));",
              "err": {},
              "uuid": "4bd78b56-7b16-4598-b9d5-7c5fa466becb",
              "parentUUID": "f30e849b-9e24-4efb-864b-d094ba54ec56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "login with Empty Username and valid Password",
              "fullTitle": "Test SAUCEDEMO login with Empty Username and valid Password",
              "timedOut": false,
              "duration": 466,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nawait loginPage.login(\"\", \"secret_sauce\");\nawait driver.wait(until.elementLocated(By.css('h3[data-test=\"error\"]')), 50000);\nlet erorWarning = await driver.findElement(By.css('h3[data-test=\"error\"]'));\nlet eror = await erorWarning.getText();\nassert.strictEqual(eror, \"Epic sadface: Username is required\");\n\nlet full_ss = await driver.takeScreenshot();\nfs.writeFileSync('report_ss/login/empty username.png', Buffer.from(full_ss, 'base64'));",
              "err": {},
              "uuid": "f377dc59-cd8a-4338-9cbb-a287d8d247e7",
              "parentUUID": "f30e849b-9e24-4efb-864b-d094ba54ec56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "login with valid Username and Empty Password",
              "fullTitle": "Test SAUCEDEMO login with valid Username and Empty Password",
              "timedOut": false,
              "duration": 463,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nawait loginPage.login(\"standard_user\", \"\");\nawait driver.wait(until.elementLocated(By.css('h3[data-test=\"error\"]')), 50000);\nlet erorWarning = await driver.findElement(By.css('h3[data-test=\"error\"]'));\nlet eror = await erorWarning.getText();\nassert.strictEqual(eror, \"Epic sadface: Password is required\");\nlet full_ss = await driver.takeScreenshot();\nfs.writeFileSync('report_ss/login/empty password.png', Buffer.from(full_ss, 'base64'));",
              "err": {},
              "uuid": "6c8b4979-9c42-466c-8745-5b2c7c7ea151",
              "parentUUID": "f30e849b-9e24-4efb-864b-d094ba54ec56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "ini test lockedout user",
              "fullTitle": "Test SAUCEDEMO ini test lockedout user",
              "timedOut": false,
              "duration": 535,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nawait loginPage.login(\"locked_out_user\", \"secret_sauce\");\nawait driver.wait(until.elementLocated(By.css('h3[data-test=\"error\"]')), 50000);\nlet erorWarning = await driver.findElement(By.css('h3[data-test=\"error\"]'));\nlet eror = await erorWarning.getText();\nassert.strictEqual(eror, \"Epic sadface: Sorry, this user has been locked out.\");\nlet full_ss = await driver.takeScreenshot();\nfs.writeFileSync('report_ss/login/locked out user.png', Buffer.from(full_ss, 'base64'));",
              "err": {},
              "uuid": "a078b0e0-4785-4d92-8a44-ccb2d2f4edc2",
              "parentUUID": "f30e849b-9e24-4efb-864b-d094ba54ec56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "login tanpa username dan password",
              "fullTitle": "Test SAUCEDEMO login tanpa username dan password",
              "timedOut": false,
              "duration": 454,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nawait loginPage.login(\"\", \"\");\nawait driver.wait(until.elementLocated(By.css('h3[data-test=\"error\"]')), 50000);\nlet erorWarning = await driver.findElement(By.css('h3[data-test=\"error\"]'));\nlet eror = await erorWarning.getText();\nassert.strictEqual(eror, \"Epic sadface: Username is required\");\nlet full_ss = await driver.takeScreenshot();\nfs.writeFileSync('report_ss/login/empty.png', Buffer.from(full_ss, 'base64'));",
              "err": {},
              "uuid": "5a5efc09-f9a0-4eb9-ad27-9457a893d425",
              "parentUUID": "f30e849b-9e24-4efb-864b-d094ba54ec56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "ini test problem user",
              "fullTitle": "Test SAUCEDEMO ini test problem user",
              "timedOut": false,
              "duration": 608,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nawait loginPage.login(\"problem_user\", \"secret_sauce\");\nlet produk = await driver.wait(until.elementLocated(By.className(\"product_label\")), 50000);\nlet isDisplayed = await produk.isDisplayed();\nassert.strictEqual(isDisplayed, true);\nlet full_ss = await driver.takeScreenshot();\nfs.writeFileSync('report_ss/login/problem user.png', Buffer.from(full_ss, 'base64'));",
              "err": {},
              "uuid": "1ae64d89-7878-4d30-8b87-29f8e938c743",
              "parentUUID": "f30e849b-9e24-4efb-864b-d094ba54ec56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "ini test performance glitched user",
              "fullTitle": "Test SAUCEDEMO ini test performance glitched user",
              "timedOut": false,
              "duration": 8409,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nawait loginPage.login(\"performance_glitch_user\", \"secret_sauce\");\nlet produk = await driver.wait(until.elementLocated(By.className(\"product_label\")), 50000);\nlet isDisplayed = await produk.isDisplayed();\nassert.strictEqual(isDisplayed, true);\nlet full_ss = await driver.takeScreenshot();\nfs.writeFileSync('report_ss/login/performance glitch user.png', Buffer.from(full_ss, 'base64'));",
              "err": {},
              "uuid": "7c60a08c-8c7d-43d9-abef-ddaf0ada447e",
              "parentUUID": "f30e849b-9e24-4efb-864b-d094ba54ec56",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f9323f1-b76c-4f72-8f0d-9b7c919461cb",
            "f82ee96e-b0be-435c-a671-076456a2af44",
            "4bd78b56-7b16-4598-b9d5-7c5fa466becb",
            "f377dc59-cd8a-4338-9cbb-a287d8d247e7",
            "6c8b4979-9c42-466c-8745-5b2c7c7ea151",
            "a078b0e0-4785-4d92-8a44-ccb2d2f4edc2",
            "5a5efc09-f9a0-4eb9-ad27-9457a893d425",
            "1ae64d89-7878-4d30-8b87-29f8e938c743",
            "7c60a08c-8c7d-43d9-abef-ddaf0ada447e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12953,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.4"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "tc01_login",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report/report_login",
        "reportFilename": "tc01_login"
      },
      "version": "6.3.0"
    }
  }
}