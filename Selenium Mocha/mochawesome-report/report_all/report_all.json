{
  "stats": {
    "suites": 3,
    "tests": 14,
    "passes": 14,
    "pending": 0,
    "failures": 0,
    "start": "2025-10-27T23:07:03.644Z",
    "end": "2025-10-27T23:08:08.172Z",
    "duration": 64528,
    "testsRegistered": 14,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3c281af8-06b4-43f4-a658-7c59a434a2a9",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "76a9f481-4695-4c72-997c-48744fb85f2c",
          "title": "SAUCEDEMO",
          "fullFile": "D:\\Bootcamp QA\\Selenium Mocha\\Test Case\\tc01_login.js",
          "file": "\\Test Case\\tc01_login.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"SAUCEDEMO\"",
              "fullTitle": "SAUCEDEMO \"before each\" hook in \"SAUCEDEMO\"",
              "timedOut": false,
              "duration": 1062,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// console.log('before test');\ndriver = await new Builder()\n    .forBrowser('chrome')\n    .setChromeOptions(options)\n    .build();\nawait driver.manage().window().maximize();\nawait driver.get('https://www.saucedemo.com/v1/');",
              "err": {},
              "uuid": "ef7a5569-8b2f-4f0c-9d57-ae9485f899d0",
              "parentUUID": "76a9f481-4695-4c72-997c-48744fb85f2c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"SAUCEDEMO\"",
              "fullTitle": "SAUCEDEMO \"after each\" hook in \"SAUCEDEMO\"",
              "timedOut": false,
              "duration": 2112,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// console.log('after test');\nawait driver.sleep(2000);\nawait driver.quit();",
              "err": {},
              "uuid": "d4ba8f26-619d-4cf3-922d-fcf407dff378",
              "parentUUID": "76a9f481-4695-4c72-997c-48744fb85f2c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Valid Login",
              "fullTitle": "SAUCEDEMO Valid Login",
              "timedOut": false,
              "duration": 1596,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nawait loginPage.login(\"standard_user\", \"secret_sauce\");\nconst isDisplayed = await loginPage.assertProdukDisplayed();\nassert.strictEqual(isDisplayed, true, \"Berhasil menampilakan halaman produk\");\nlet full_ss = await driver.takeScreenshot();\nfs.writeFileSync('report_ss/login/valid login.png', Buffer.from(full_ss, 'base64'));",
              "err": {},
              "uuid": "71e24d68-21ac-4cf7-af92-c9c5057f0d1f",
              "parentUUID": "76a9f481-4695-4c72-997c-48744fb85f2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "login with Invalid Username",
              "fullTitle": "SAUCEDEMO login with Invalid Username",
              "timedOut": false,
              "duration": 479,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nawait loginPage.login(\"invalid_user\", \"secret_sauce\");\nconst eror = await loginPage.getErrorMessage();\nassert.strictEqual(eror, \"Epic sadface: Username and password do not match any user in this service\");\nlet full_ss = await driver.takeScreenshot();\nfs.writeFileSync('report_ss/login/invalid username.png', Buffer.from(full_ss, 'base64'));",
              "err": {},
              "uuid": "d458f7e1-98fa-4b3c-97b2-bfd2811e7e0e",
              "parentUUID": "76a9f481-4695-4c72-997c-48744fb85f2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "login with Invalid Password",
              "fullTitle": "SAUCEDEMO login with Invalid Password",
              "timedOut": false,
              "duration": 502,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nawait loginPage.login(\"standard_user\", \"invalid_pass\");\nconst eror = await loginPage.getErrorMessage();\nassert.strictEqual(eror, \"Epic sadface: Username and password do not match any user in this service\");\nlet full_ss = await driver.takeScreenshot();\nfs.writeFileSync('report_ss/login/invalid password.png', Buffer.from(full_ss, 'base64'));",
              "err": {},
              "uuid": "cdeecf99-7fd6-43da-802d-2a081845e20c",
              "parentUUID": "76a9f481-4695-4c72-997c-48744fb85f2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "login with Empty Username and valid Password",
              "fullTitle": "SAUCEDEMO login with Empty Username and valid Password",
              "timedOut": false,
              "duration": 427,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nawait loginPage.login(\"\", \"secret_sauce\");\nconst eror = await loginPage.getErrorMessage();\nassert.strictEqual(eror, \"Epic sadface: Username is required\");\nlet full_ss = await driver.takeScreenshot();\nfs.writeFileSync('report_ss/login/empty username.png', Buffer.from(full_ss, 'base64'));",
              "err": {},
              "uuid": "2b345f29-80de-4eb6-8b41-5958316d0e46",
              "parentUUID": "76a9f481-4695-4c72-997c-48744fb85f2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "login with valid Username and Empty Password",
              "fullTitle": "SAUCEDEMO login with valid Username and Empty Password",
              "timedOut": false,
              "duration": 460,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nawait loginPage.login(\"standard_user\", \"\");\nconst eror = await loginPage.getErrorMessage();\nassert.strictEqual(eror, \"Epic sadface: Password is required\");\nlet full_ss = await driver.takeScreenshot();\nfs.writeFileSync('report_ss/login/empty password.png', Buffer.from(full_ss, 'base64'));",
              "err": {},
              "uuid": "663b066b-a05a-44fa-9210-5aecc6d1720c",
              "parentUUID": "76a9f481-4695-4c72-997c-48744fb85f2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login with locked out user",
              "fullTitle": "SAUCEDEMO Login with locked out user",
              "timedOut": false,
              "duration": 481,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nawait loginPage.login(\"locked_out_user\", \"secret_sauce\");\nconst eror = await loginPage.getErrorMessage();\nassert.strictEqual(eror, \"Epic sadface: Sorry, this user has been locked out.\");\nlet full_ss = await driver.takeScreenshot();\nfs.writeFileSync('report_ss/login/locked out user.png', Buffer.from(full_ss, 'base64'));",
              "err": {},
              "uuid": "273ad6fe-d083-489f-bbcc-f05b572397b6",
              "parentUUID": "76a9f481-4695-4c72-997c-48744fb85f2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "login without username dan password",
              "fullTitle": "SAUCEDEMO login without username dan password",
              "timedOut": false,
              "duration": 429,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nawait loginPage.login(\"\", \"\");\nconst eror = await loginPage.getErrorMessage();\nassert.strictEqual(eror, \"Epic sadface: Username is required\");\nlet full_ss = await driver.takeScreenshot();\nfs.writeFileSync('report_ss/login/empty.png', Buffer.from(full_ss, 'base64'));",
              "err": {},
              "uuid": "f903ba81-32c0-4c08-8aff-8569c1303903",
              "parentUUID": "76a9f481-4695-4c72-997c-48744fb85f2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login with problem user",
              "fullTitle": "SAUCEDEMO Login with problem user",
              "timedOut": false,
              "duration": 630,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nawait loginPage.login(\"problem_user\", \"secret_sauce\");\nconst eror = await loginPage.assertErorProblemUser();\nassert.strictEqual(eror, true, \"Berhasil login tapi gambar tidak muncul pada halaman produk\");\nlet full_ss = await driver.takeScreenshot();\nfs.writeFileSync('report_ss/login/problem user.png', Buffer.from(full_ss, 'base64'));",
              "err": {},
              "uuid": "76424a07-f878-482a-a30d-decc7f105e99",
              "parentUUID": "76a9f481-4695-4c72-997c-48744fb85f2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login with performance glitched user",
              "fullTitle": "SAUCEDEMO Login with performance glitched user",
              "timedOut": false,
              "duration": 6502,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginPage = new LoginPage(driver);\nawait loginPage.login(\"performance_glitch_user\", \"secret_sauce\");\nconst isDisplayed = await loginPage.assertProdukDisplayed();\nassert.strictEqual(isDisplayed, true, \"Berhasil login tapi lambat menampilkan halaman produk\");\nlet full_ss = await driver.takeScreenshot();\nfs.writeFileSync('report_ss/login/performance glitch user.png', Buffer.from(full_ss, 'base64'));",
              "err": {},
              "uuid": "accb2ad3-eb89-466f-a78e-e62fa95f4031",
              "parentUUID": "76a9f481-4695-4c72-997c-48744fb85f2c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "71e24d68-21ac-4cf7-af92-c9c5057f0d1f",
            "d458f7e1-98fa-4b3c-97b2-bfd2811e7e0e",
            "cdeecf99-7fd6-43da-802d-2a081845e20c",
            "2b345f29-80de-4eb6-8b41-5958316d0e46",
            "663b066b-a05a-44fa-9210-5aecc6d1720c",
            "273ad6fe-d083-489f-bbcc-f05b572397b6",
            "f903ba81-32c0-4c08-8aff-8569c1303903",
            "76424a07-f878-482a-a30d-decc7f105e99",
            "accb2ad3-eb89-466f-a78e-e62fa95f4031"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11506,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "b9275e54-9478-453b-9b47-57b63e4dca71",
          "title": "SAUCEDEMO",
          "fullFile": "D:\\Bootcamp QA\\Selenium Mocha\\Test Case\\tc02_sort.js",
          "file": "\\Test Case\\tc02_sort.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"SAUCEDEMO\"",
              "fullTitle": "SAUCEDEMO \"before each\" hook in \"SAUCEDEMO\"",
              "timedOut": false,
              "duration": 2224,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// console.log('before test');\ndriver = await new Builder()\n    .forBrowser('chrome')\n    .setChromeOptions(options)\n    .build();\nawait driver.manage().window().maximize();\nawait driver.get('https://www.saucedemo.com/v1/');\nconst loginPage = new LoginPage(driver);\nawait loginPage.login(\"standard_user\", \"secret_sauce\");",
              "err": {},
              "uuid": "79993c60-d9c1-4a32-b0cc-d8b5b3d2d6ea",
              "parentUUID": "b9275e54-9478-453b-9b47-57b63e4dca71",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"SAUCEDEMO\"",
              "fullTitle": "SAUCEDEMO \"after each\" hook in \"SAUCEDEMO\"",
              "timedOut": false,
              "duration": 2118,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// console.log('after test');\nawait driver.sleep(2000);\nawait driver.quit();",
              "err": {},
              "uuid": "981d3e51-5acd-4576-b31e-be160114dc71",
              "parentUUID": "b9275e54-9478-453b-9b47-57b63e4dca71",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "sort price high to low",
              "fullTitle": "SAUCEDEMO sort price high to low",
              "timedOut": false,
              "duration": 380,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const sortPage = new sort(driver);\nawait sortPage.sortPriceHighToLow();\nconst isCorrectPrice = await sortPage.assertHilo();\nassert.strictEqual(isCorrectPrice, true, \"Produk dari harga tertinggi sesuai\");\nlet full_ss = await driver.takeScreenshot();\nfs.writeFileSync('report_ss/sort/high to low.png', Buffer.from(full_ss, 'base64'));",
              "err": {},
              "uuid": "567b0935-5ced-462c-bf66-6dc8d0f80aea",
              "parentUUID": "b9275e54-9478-453b-9b47-57b63e4dca71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sort price low to high",
              "fullTitle": "SAUCEDEMO sort price low to high",
              "timedOut": false,
              "duration": 343,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const sortPage = new sort(driver);\nawait sortPage.sortPriceLowToHigh();\nconst isCorrectPrice = await sortPage.assertLohi();\nassert.strictEqual(isCorrectPrice, true, \"Produk dari harga terendah sesuai\");\nlet full_ss = await driver.takeScreenshot();\nfs.writeFileSync('report_ss/sort/low to high.png', Buffer.from(full_ss, 'base64'));",
              "err": {},
              "uuid": "71cda1fa-0b66-4507-a0dc-590a4b9f855f",
              "parentUUID": "b9275e54-9478-453b-9b47-57b63e4dca71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sort A to Z",
              "fullTitle": "SAUCEDEMO sort A to Z",
              "timedOut": false,
              "duration": 304,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const sortPage = new sort(driver);\nawait sortPage.sortAtoZ();\nconst isCorrectName = await sortPage.assertAtoZ();\nassert.strictEqual(isCorrectName, true, \"Produk dari A to Z sesuai\");\nlet full_ss = await driver.takeScreenshot();\nfs.writeFileSync('report_ss/sort/A to Z.png', Buffer.from(full_ss, 'base64'));",
              "err": {},
              "uuid": "1c059b33-65c3-42f5-8b9a-897e6948eb43",
              "parentUUID": "b9275e54-9478-453b-9b47-57b63e4dca71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sort Z to A",
              "fullTitle": "SAUCEDEMO sort Z to A",
              "timedOut": false,
              "duration": 350,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const sortPage = new sort(driver);\nawait sortPage.sortZtoA();\nconst isCorrectName = await sortPage.assertZtoA();\nassert.strictEqual(isCorrectName, true, \"Produk dari Z to A sesuai\");\nlet full_ss = await driver.takeScreenshot();\nfs.writeFileSync('report_ss/sort/Z to A.png', Buffer.from(full_ss, 'base64'));",
              "err": {},
              "uuid": "b8a91958-4d03-44d3-ac59-33d97ba5f0ff",
              "parentUUID": "b9275e54-9478-453b-9b47-57b63e4dca71",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "567b0935-5ced-462c-bf66-6dc8d0f80aea",
            "71cda1fa-0b66-4507-a0dc-590a4b9f855f",
            "1c059b33-65c3-42f5-8b9a-897e6948eb43",
            "b8a91958-4d03-44d3-ac59-33d97ba5f0ff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1377,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "232990e7-c785-48d5-810f-d87fc1aecdb5",
          "title": "SAUCEDEMO",
          "fullFile": "D:\\Bootcamp QA\\Selenium Mocha\\Test Case\\tc03_checkout.js",
          "file": "\\Test Case\\tc03_checkout.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"SAUCEDEMO\"",
              "fullTitle": "SAUCEDEMO \"before each\" hook in \"SAUCEDEMO\"",
              "timedOut": false,
              "duration": 2440,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// console.log('before test');\ndriver = await new Builder()\n    .forBrowser('chrome')\n    .setChromeOptions(options)\n    .build();\nawait driver.manage().window().maximize();\nawait driver.get('https://www.saucedemo.com/v1/');\nconst loginPage = new LoginPage(driver);\nawait loginPage.login(\"standard_user\", \"secret_sauce\");",
              "err": {},
              "uuid": "140fe8e2-7ac5-404c-88b1-652dc0949995",
              "parentUUID": "232990e7-c785-48d5-810f-d87fc1aecdb5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"SAUCEDEMO\"",
              "fullTitle": "SAUCEDEMO \"after each\" hook in \"SAUCEDEMO\"",
              "timedOut": false,
              "duration": 2079,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// console.log('after test');\nawait driver.sleep(2000);\nawait driver.quit();",
              "err": {},
              "uuid": "5dbf429a-84fd-44e7-b653-22c545efd97c",
              "parentUUID": "232990e7-c785-48d5-810f-d87fc1aecdb5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Checkout",
              "fullTitle": "SAUCEDEMO Checkout",
              "timedOut": false,
              "duration": 1194,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const checkoutPage = new CheckoutPage(driver);\nawait checkoutPage.clickAddToCart();\nawait checkoutPage.clickCart();\nawait checkoutPage.clickCheckout();\nawait checkoutPage.fillForm(\"yono\", \"bakrie\", \"12345\");\nawait checkoutPage.clickContinue();\nawait checkoutPage.clickFinish();\nconst isCheckoutComplete = await checkoutPage.assertCheckoutComplete();\nassert.strictEqual(isCheckoutComplete, true, \"Checkout berhasil\");\nlet full_ss = await driver.takeScreenshot();\nfs.writeFileSync('report_ss/checkout/success checkout.png', Buffer.from(full_ss, 'base64'));",
              "err": {},
              "uuid": "e200a047-ca7f-4aab-8f93-75904df4f078",
              "parentUUID": "232990e7-c785-48d5-810f-d87fc1aecdb5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e200a047-ca7f-4aab-8f93-75904df4f078"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1194,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.4"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report_all",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report/report_all",
        "reportFilename": "report_all"
      },
      "version": "6.3.0"
    }
  }
}